% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/apply_model_func.R
\name{apply_model_func}
\alias{apply_model_func}
\title{Apply a model-like function to dataset}
\usage{
apply_model_func(dataset, targed_dataset = "data", my_model)
}
\arguments{
\item{dataset}{A nested dataframe. Ideally, previously grouped by the paramters of interes to be analyzed. Eg. wave frequency, wave latency, amplitude, etc.}

\item{targed_dataset}{Character. the column name of the dataset to perform the summary. By default uses the colum named \code{"data"} containing the raw dataset, but if you have transformed data e.ge logarithmic, centered, etc., you can input the name of such column.}

\item{my_model}{A function. A function containing the model to apply to your targeted dataset.}
}
\value{
The input dataframe with a new column named \code{"my_model"} containing the model object.
}
\description{
This function applies a model to a nested dataframe and return a new column with the model object. It accets function models expressions in the form of: \verb{my_model <- funcion(my_dataset)\{ lm(value ~ condition_1 + condition_2, data = my_dataset) \}}, where \code{value}, is the name of your variable of interest and \code{condition_1 + condition_2} are the explanatory variables. It can also use other type of model expression.
}
\examples{
# the example is missing
}
